image: docker:latest
services:
  - docker:dind
stages:
  - build
  - test
  - push
  - deploy_test
  - integration_test
  - deploy

build:
  stage: build
  script:
    - echo "BUILD:build"
    - docker login registry.gitlab.com -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker build -t registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF .
    - docker push registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF
unittests:
  stage: test
  script:
    - echo "TEST:unittests"
    - apk add --no-cache python3
    - apk add --no-cache py3-pip
    - pip3 install --upgrade pip
    - pip3 install docker-compose
    - export PYTHONUNBUFFERED=1
    - docker pull registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF
    - docker tag registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF registry.gitlab.com/jankubierecki/uekpartnership:latest
    - docker-compose pull django postgres
    - docker-compose up -d postgres django
    - python3 wait_for_container.py django postgres
    - docker-compose logs postgres
    - sleep 10
    - docker-compose logs postgres
    - docker-compose logs django
    - ./wait_for_postgres.sh
    - docker-compose exec -T django python manage.py test --noinput
coverage:
  stage: test
  script:
    - echo "this is coverage"
    - echo $CI_BUILD_REF
push:
  stage: push
  script:
    - echo "PUSH:push"
    - docker login registry.gitlab.com -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker pull registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF
    - docker tag registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF registry.gitlab.com/jankubierecki/uekpartnership:latest
    - docker push registry.gitlab.com/jankubierecki/uekpartnership:latest

deploy_test:
  stage: deploy_test
  script:
    - echo "DEPLOY:deploy_test"
  only:
    - master
  environment: 
    name: test

integration_test:
  image: python:3.6
  stage: integration_test
  script:
    - echo "INTEGRATION_TEST:test"
    - curl https://kubierecki.pl

deploy_staging:
  stage: deploy
  script:
    - echo "DEPLOY:deploy_staging"
  when: manual
  environment:
    name: staging

deploy_production:
  stage: deploy
  script:
    - echo "DEPLOY:deploy_production"
  when: manual
  environment:
    name: production