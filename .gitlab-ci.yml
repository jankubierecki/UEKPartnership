image: docker:latest
services:
  - docker:dind
stages:
  - script
  - build
  - test
  - push
  - deploy
  - cleanup

script:
  stage: script
  script:
    - echo "unittest:test"
    - apt-get update
    - apt-get install python3
    - apt-get install python3-pip
    - /usr/bin/env
    - pip3 install docker-compose
    - python3 wait_for_container.py django postgres nginx
build:
  stage: build
  script:
    - echo "build:build"
    - docker login registry.gitlab.com -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker build -t registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF .
    - docker push registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF
unittests:
  stage: test
  script:
    - echo "unittest:test"
    - apk add --no-cache python3
    - apk add --no-cache python
    - apk add --no-cache py3-pip
    - apk add --no-cache py-pip
    - pip install --upgrade pip
    - pip3 install --upgrade pip
    - pip3 install docker-compose
    - docker pull registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF
    - docker tag registry.gitlab.com/jankubierecki/uekpartnership:$CI_BUILD_REF registry.gitlab.com/jankubierecki/uekpartnership:latest
    - docker-compose pull
    - docker-compose up -d postgres django
    - python3 --version
    - python3 -c 'print("test")'
    - ./wait_for_container.py django postgres nginx
    - docker-compose exec django /partnerships/manage.py test
coverage:
  stage: test
  script:
    - echo "this is coverage"
    - echo $CI_BUILD_REF
push:
  stage: push
  script:
    - echo "this is push"
deploy_test:
  stage: deploy
  script:
    - echo "this is deploy_"
  only:
    - master
  environment: 
    name: test
deploy_staging:
  stage: deploy
  script:
    - echo "this is deploy"
  when: manual
  environment:
    name: staging
cleanup:
  stage: cleanup
  script:
    - echo "this is cleanup"
  when: always
